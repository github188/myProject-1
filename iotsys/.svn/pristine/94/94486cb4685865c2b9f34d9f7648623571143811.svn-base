<?xml version="1.0" encoding="UTF-8"?>
<beans 
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/util  
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">
    
    
    
	
	<!-- 扫描指定包及其子包中的注解类 -->
	<context:component-scan base-package="com.ssm"></context:component-scan> 
	<!-- 配置数据库jdbc.properties的地址 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置数据源 写法一 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>
	
	
	<!-- JDBC事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 自动扫描所有的Mapper接口与文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssm.mapper"></property>
	</bean>

	<!-- 定义通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 只读 -->
			<tx:method name="get*" read-only="true"/> 
       		<tx:method name="find*" read-only="true"/> 
       		<tx:method name="have*" read-only="true"/> 
       		<!-- 调用事务已以下开头 -->
       		<tx:method name="insert*" propagation="REQUIRED" /> 
       		<tx:method name="update*" propagation="REQUIRED"/>
       		<tx:method name="delete*" propagation="REQUIRED"/>
       		<tx:method name="do*" propagation="REQUIRED"/>  
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:pointcut id="interceptorPointCuts"
			expression="execution(* com.ssm.service.*.impl.*.*(..))||execution(* com.ssm.*.service.impl.*.*(..))||execution(* com.ssm.service.*.impl.*.*.*(..))||execution(* com.ssm.service.*.*.impl.*.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
	</aop:config>
    
	<!-- 配置核心对象 -->
 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis.cfg.xml文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 -->
		<property name="typeAliasesPackage" value="com.ssm.beans"></property>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="sqlSession" class="org.apache.mybatis.SqlSessionWrapper">
		<constructor-arg name="sqlSession" ref="sqlSessionTemplate" />
	</bean>
	
	<!-- 事物管理器 -->
	<bean id="trans" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	<!-- 利用注解配置事物 -->
	<tx:annotation-driven transaction-manager="trans"/>
  	
  	<!-- 	定时任务调度 -->
	<import resource="application-quartz.xml"/>
	<!-- 	Redis启动 -->
	<import resource="application-redis.xml"/>
	
    <!-- 	TCP端口监听启动 -->
	<!-- <import resource="application-protListen.xml"/> -->
	
    <!-- 加载UDP端口监听服务器端-->
    <!-- <bean id="loadReSource" class="com.ssm.udp.server.EchoServer" init-method="starDUPThread"></bean>  -->
	
</beans> 
	